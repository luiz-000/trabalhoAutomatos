DFA que corresponde a todas as strings binárias que terminam em um número ímpar de '1's:
{
    "states": ["q0", "q1", "q2"],
    "input_symbols": ["0", "1"],
    "transitions": {
        "q0": {
            "0": "q0",
            "1": "q1"
        },
        "q1": {
            "0": "q0",
            "1": "q2"
        },
        "q2": {
            "0": "q2",
            "1": "q1"
        }
    },
    "initial_state": "q0",
    "final_states": ["q1"]
}

Entradas válidas para teste:
"001" , "000111" -> Accepted
"011" , "001111" -> Rejected



DFA que aceita strings contendo um número par de 1s:
{
    "states": ["q0", "q1"],
    "input_symbols": ["0", "1"],
    "transitions": {
        "q0": {
            "0": "q0",
            "1": "q1"
        },
        "q1": {
            "0": "q1",
            "1": "q0"
        }
    },
    "initial_state": "q0",
    "final_states": ["q0"]
}

Entradas válidas para teste:
"0" , "11" , "1010" , "11011" -> Accepted
"1" , "10" , "1101" , "111011"     -> Rejected



DFA que aceita strings que terminam com ab:
{
    "states": ["q0", "q1", "q2"],
    "input_symbols": ["a", "b"],
    "transitions": {
        "q0": {
            "a": "q1",
            "b": "q0"
        },
        "q1": {
            "a": "q1",
            "b": "q2"
        },
        "q2": {
            "a": "q1",
            "b": "q0"
        }
    },
    "initial_state": "q0",
    "final_states": ["q2"]
}

Entradas válidas para teste:
"ab" , "aab" , "babab" , "aaab" -> Accepted
"a" , "b", "aba", "ba" , "abb"  -> Rejected



DFA que aceita strings cujo comprimento é múltiplo de 3:
{
    "states": ["q0", "q1", "q2"],
    "input_symbols": ["0", "1"],
    "transitions": {
        "q0": {
            "0": "q1",
            "1": "q1"
        },
        "q1": {
            "0": "q2",
            "1": "q2"
        },
        "q2": {
            "0": "q0",
            "1": "q0"
        }
    },
    "initial_state": "q0",
    "final_states": ["q0"]
}

Entradas válidas para teste:
"000" , "111" , "101010" , "110001101" -> Accepted
"0" , "01" , "1011" , "01101" , "1100011"   -> Rejected
