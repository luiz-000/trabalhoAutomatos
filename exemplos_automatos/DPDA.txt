DPDA que corresponde a zero ou mais 'A, seguido pelo mesmo número de 'B's (aceitando pelo estado final):
{
    "states": ["q0", "q1", "q2", "q3"],
    "input_symbols": ["a", "b"],
    "stack_symbols": ["0", "1"],
    "transitions": {
        "q0": {
            "a": {
                "0": ["q1", ["1", "0"]]
            }
        },
        "q1": {
            "a": {
                "1": ["q1", ["1", "1"]]
            },
            "b": {
                "1": ["q2", []]
            }
        },
        "q2": {
            "b": {
                "1": ["q2", []]
            },
            "": {
                "0": ["q3", ["0"]]
            }
        }
    },
    "initial_state": "q0",
    "initial_stack_symbol": "0",
    "final_states": ["q3"],
    "acceptance_mode": "final_state"
}

Entradas válidas para teste:
"aabb" , "aaabbb" , "ab"      -> Accepted
"aab" , "aaa" , "abb" , "bbb" -> Rejected



DPDA para múltiplos de 3 em números binários:
{
    "states": ["q0", "q1", "q2"],
    "input_symbols": ["0", "1"],
    "stack_symbols": ["$"],
    "transitions": {
        "q0": {
            "0": { "$": ["q0", ["$"]] },
            "1": { "$": ["q1", ["$"]] }
        },
        "q1": {
            "0": { "$": ["q2", ["$"]] },
            "1": { "$": ["q0", ["$"]] }
        },
        "q2": {
            "0": { "$": ["q1", ["$"]] },
            "1": { "$": ["q2", ["$"]] }
        }
    },
    "initial_state": "q0",
    "initial_stack_symbol": "$",
    "final_states": ["q0"],
    "acceptance_mode": "final_state"
}

Entradas válidas para teste:
"0" , "110" , "111111" -> Accepted
"1" , "101" , "111"    -> Rejected
